*** Settings ***
Library         SeleniumLibrary
Library         BuiltIn
Suite Teardown    Close All Browsers

*** Variables ***
${ONLINE_TEXT}                      You're now online!
${OFFLINE_TEXT}                     You're offline now!
${PROVIDER_EMAIL}                   raghuram.m+rp1@taskhuman.com
${PROVIDER_PASSWORD}                asdfgh@12345A
${CONSUMER_EMAIL}                   raghuram.m+rc1@taskhuman.com
${CONSUMER_PASSWORD}                asdfgh@12345Q

# Browser settings (Needed for Open Browser calls)
${BROWSER}                          chrome
${IMPLICIT_WAIT_TIME}               5s
${EXPLICIT_WAIT_TIMEOUT}            10s
${URL}                              https://app-dev.taskhuman.com/login

${GENERIC_POPOVER_VISIBLE}          css=div.chakra-popover__popper[style*="visibility: visible"]

# --- Locators for Camera/Video Options Popover ---
# Updated locator using data-testid as provided by user.
${CAMERA_VIDEO_OPTIONS_BUTTON}      xpath=//img[@data-testid="show_options_btn"][1]
${CAMERA_HEADER}                    id=text-choose-camera                           # Header for the Camera section
${CAMERA_OPTIONS_LIST}              ul[aria-labelledby="text-choose-camera"]        # UL containing camera options
${VIDEO_QUALITY_HEADER}             id=txt-choose-video-quality                     # Header for the Video Quality section
${VIDEO_QUALITY_AUTO}               label[for="video-quality-auto"]                 # "Auto" Video Quality option
${VIDEO_QUALITY_FHD}                label[for="video-quality-fhd-1080p"]            # "Full High Definition 1080p" Video Quality option
${VIDEO_QUALITY_HD}                 label[for="video-quality-hd-720p"]              # "High Definition 720p" Video Quality option
${VIDEO_QUALITY_SD}                 label[for="video-quality-sd-360p"]              # "Standard Definition 360p" Video Quality option

# --- Locators for Speaker/Microphone Options Popover ---
# Updated locator using data-testid as provided by user.
${MIC_SPEAKER_OPTIONS_BUTTON}       xpath=//img[@data-testid="show_options_btn"][2]
${SPEAKER_HEADER}                   id=txt-choose-speaker                           # Header for the Speaker section
${SPEAKER_OPTIONS_LIST}             ul[aria-labelledby="txt-choose-speaker"]        # UL containing speaker options
${MICROPHONE_HEADER}                id=txt-choose-mic                               # Header for the Microphone section
${MICROPHONE_OPTIONS_LIST}          ul[aria-labelledby="txt-choose-mic"]            # UL containing microphone options
${NOISE_REDUCTION_OPTION}           xpath=//label[@for='switch-noise-reduction']    # Noise Reduction option

*** Keywords ***
# --- Original Keywords (No changes) ---
Login as Provider in Incognito
    # Logs in as a provider in incognito mode.
    Switch Browser    INC
    Wait Until Element Is Visible    xpath://div[@class='Login-module__signup-text css-0']    10s
    Click Element     xpath://div[@class='Login-module__signup-text css-0']
    Wait Until Element Is Visible    xpath=//input[@name='email']    10s
    Click Element     xpath=//input[@name='email']
    Input Text        xpath=//input[@name='email']    ${PROVIDER_EMAIL}
    Sleep             5s
    Click Element     xpath://input[@name='password']
    Input Text        xpath=//input[@name='password']    ${PROVIDER_PASSWORD}
    Sleep             5s
    Click Element     xpath://button[@value='submit']
    Sleep             3s

    # Determine page status and handle accordingly
    ${online_status_present}=    Run Keyword And Return Status    Wait Until Page Contains Element    xpath=//*[text()="${ONLINE_TEXT}"]    10s
    ${offline_status_present}=   Run Keyword And Return Status    Wait Until Page Contains Element    xpath=//*[text()="${OFFLINE_TEXT}"]    10s

    Run Keyword If    ${offline_status_present}    Make Online
    Run Keyword If    ${online_status_present}     Provider is Online

Make Online
    Wait Until Element Is Visible    xpath://button[@id='go_online_now']    10s
    Click Element     xpath://button[@id='go_online_now']
    Sleep             5s
    Click Element     xpath://button[text()='Save']
    Sleep             5s

Provider is Online
    Sleep             5s

Login as Consumer
    # Logs in as a consumer in normal mode.
    Switch Browser    NORM
    Wait Until Element Is Visible    xpath://div[@class='Login-module__signup-text css-0']
    Sleep             5s
    Click Element     xpath://div[@class='Login-module__signup-text css-0']
    Wait Until Element Is Visible    xpath=//input[@name='email']    8s
    Click Element     xpath=//input[@name='email']
    Input Text        xpath=//input[@name='email']    ${CONSUMER_EMAIL}
    Wait Until Element Is Visible    xpath=//input[@name='password']    5s
    Click Element     xpath=//input[@name='password']
    Input Text        xpath=//input[@name='password']    ${CONSUMER_PASSWORD}
    Wait Until Element Is Visible    xpath://button[@value='submit']    5s
    Click Element     xpath://button[@value='submit']
    Sleep             4s

Goto Provider Profile
    # Goes to the provider profile page.
    Go To             https://app-dev.taskhuman.com/profile/5466
    Sleep             5s

Call Provider
    # Calls the provider and clicks through the steps.
    Wait Until Element Is Visible    xpath://div[@class='ActionMenu-module__ActionMenu--List css-0']//img[1]    5s
    Click Element     xpath://div[@class='ActionMenu-module__ActionMenu--List css-0']//img[1]
    Sleep             5s
    #Wait Until Element Is Visible    xpath=//div[contains(@class, 'CallForm-module__CallForm--ContinueCall__Skill') and contains(@class, 'css-0') and text()='AK skill']    20s
    #Click Element    xpath=//div[contains(@class, 'CallForm-module__CallForm--ContinueCall__Skill') and contains(@class, 'css-0') and text()='AK skill']
    Wait Until Element Is Visible    xpath=(//span[contains(@class, 'SkillsModalContent-module__SkillsList__Skill')])[1]    10s
    Click Element     xpath=(//span[contains(@class, 'SkillsModalContent-module__SkillsList__Skill')])[1]
    Wait Until Element Is Visible    xpath://*[text()='Next']    5s
    Click Element     xpath://*[text()='Next']
    Wait Until Element Is Visible    xpath://*[text()='Next']    5s
    Click Element     xpath://*[text()='Next']
    Wait Until Element Is Visible    xpath://*[text()='Connect Now']    5s
    Click Element     xpath://*[text()='Connect Now']
    Sleep             5s

Accept Call as Provider in Incognito
    # Accepts the call in incognito mode as the provider.
    Switch Browser    INC
    Wait Until Element Is Visible    xpath://*[text()='Accept']
    Click Element     xpath://*[text()='Accept']
    Sleep             5s
    Wait Until Element Is Visible    xpath://*[text()='Got It!']    8s
    Click Element     xpath://*[text()='Got It!']
    Switch Browser    NORM
    Wait Until Element Is Visible    xpath://*[text()='Got It!']    5s
    Click Element     xpath://*[text()='Got It!']

# --- NEW/MODIFIED Keywords for Validation ---
Launch Browser And Open Application
    # Opens the browser, sets window size, and navigates to the base URL.
    [Arguments]    ${browser_alias}
    Open Browser    ${URL}    ${BROWSER}    alias=${browser_alias}
    Set Window Size    650    1200
    Set Selenium Implicit Wait    ${IMPLICIT_WAIT_TIME}
    Go To           ${URL}

Open Popover And Validate Content
    # Generic keyword to switch browser, click a button, wait for popover.
    # This assumes the browser is already open and on the correct page (e.g., call screen).
    [Arguments]    ${button_locator}
    Switch Browser    NORM    # Ensure we are on the consumer's browser (where the call is active)
    Click Element     ${button_locator}
    Wait Until Element Is Visible    ${GENERIC_POPOVER_VISIBLE}    timeout=${EXPLICIT_WAIT_TIMEOUT}    error=Media options popover did not become visible after clicking ${button_locator}.

Verify Section Header And List Items
    # Verifies a section header and that its associated list contains visible items.
    [Arguments]    ${header_locator}    ${expected_header_text}    ${list_locator}
    Wait Until Element Is Visible    ${header_locator}    timeout=${IMPLICIT_WAIT_TIME}
    Element Text Should Be       ${header_locator}    ${expected_header_text}
    @{list_items}=    Get WebElements    ${list_locator}/li
    Should Not Be Empty      @{list_items}    No items found in list: ${list_locator}
    FOR    ${item}    IN    @{list_items}
        Wait Until Element Is Visible    ${item}    timeout=${IMPLICIT_WAIT_TIME}
        # Adding more robust checks for interactability
        Element Should Be Enabled    ${item}
        Element Should Be Clickable  ${item}
    END

Verify Video Quality Options
    # Verifies the specific, fixed video quality options.
    Wait Until Element Is Visible    ${VIDEO_QUALITY_HEADER}    timeout=${IMPLICIT_WAIT_TIME}
    Element Text Should Be       ${VIDEO_QUALITY_HEADER}    Video Quality

    # New validation approach: Wait for visibility, then check if element is enabled and clickable
    Wait Until Element Is Visible    ${VIDEO_QUALITY_AUTO}    timeout=${IMPLICIT_WAIT_TIME}
    Element Should Be Enabled        ${VIDEO_QUALITY_AUTO}
    Element Should Be Clickable      ${VIDEO_QUALITY_AUTO}
    Element Text Should Be           ${VIDEO_QUALITY_AUTO}    Auto

    Wait Until Element Is Visible    ${VIDEO_QUALITY_FHD}    timeout=${IMPLICIT_WAIT_TIME}
    Element Should Be Enabled        ${VIDEO_QUALITY_FHD}
    Element Should Be Clickable      ${VIDEO_QUALITY_FHD}
    Element Text Should Be           ${VIDEO_QUALITY_FHD}    Full High Definition 1080p

    Wait Until Element Is Visible    ${VIDEO_QUALITY_HD}    timeout=${IMPLICIT_WAIT_TIME}
    Element Should Be Enabled        ${VIDEO_QUALITY_HD}
    Element Should Be Clickable      ${VIDEO_QUALITY_HD}
    Element Text Should Be           ${VIDEO_QUALITY_HD}    High Definition 720p

    Wait Until Element Is Visible    ${VIDEO_QUALITY_SD}    timeout=${IMPLICIT_WAIT_TIME}
    Element Should Be Enabled        ${VIDEO_QUALITY_SD}
    Element Should Be Clickable      ${VIDEO_QUALITY_SD}
    Element Text Should Be           ${VIDEO_QUALITY_SD}    Standard Definition 360p

Verify Noise Reduction Option
    # Verifies the Noise Reduction option.
    Wait Until Element Is Visible    ${NOISE_REDUCTION_OPTION}    timeout=${IMPLICIT_WAIT_TIME}
    # Adding more robust checks for interactability
    Element Should Be Enabled        ${NOISE_REDUCTION_OPTION}
    Element Should Be Clickable      ${NOISE_REDUCTION_OPTION}
    Element Text Should Be           ${NOISE_REDUCTION_OPTION}    Noise Reduction

Validate camera options
    # Validates the camera and video quality options popover.
    # This keyword now uses the 'Open Popover And Validate Content' to handle the click and wait.
    Open Popover And Validate Content    ${CAMERA_VIDEO_OPTIONS_BUTTON}
    Verify Section Header And List Items    ${CAMERA_HEADER}    Camera    ${CAMERA_OPTIONS_LIST}
    Verify Video Quality Options

Validate Mic options
    # Validates the microphone and speaker options popover.
    # This keyword now uses the 'Open Popover And Validate Content' to handle the click and wait.
    Open Popover And Validate Content    ${MIC_SPEAKER_OPTIONS_BUTTON}
    Verify Section Header And List Items    ${SPEAKER_HEADER}    Choose Speaker    ${SPEAKER_OPTIONS_LIST}
    Verify Section Header And List Items    ${MICROPHONE_HEADER}    Choose Microphone    ${MICROPHONE_OPTIONS_LIST}
    Verify Noise Reduction Option

    # This section for ending the call was part of your original 'Validate Mic options'.
    # It's retained here as per your instruction to not change other things.
    Switch Browser    INC
    Wait Until Element Is Visible    (//button[@aria-label="End Call"])[last()]    5s
    Click Element     (//button[@aria-label="End Call"])[last()]
    Sleep             10s

*** Test Cases ***
Open and Position Browsers
    # Opens two browsers and positions them side by side.
    # Open first browser (normal mode)
    Open Browser    https://app-dev.taskhuman.com/login    Chrome    alias=NORM
    Set Window Size    650    1200
    Set Window Position    0    0

    # Open second browser (incognito mode)
    Open Browser    https://app-dev.taskhuman.com/login    Chrome    alias=INC    options=add_argument("--incognito")
    Set Window Size    650    1200
    Set Window Position    650    0

Login as Provider in Incognito Mode
    # Test case to log in as a provider in incognito mode.
    Login as Provider in Incognito

Login as Consumer in Normal Mode
    # Test case to log in as a consumer in normal mode.
    Login as Consumer

Goto Provider Profile and make online if found offline
    # Test case to go to the provider profile page.
    Goto Provider Profile

Call Provider
    # Test case to call the provider.
    Call Provider

Accept Call as Provider
    # Test case to accept the call as a provider in incognito mode.
    Accept Call as Provider in Incognito

Validate if camera options are visible in list
    Validate camera options

Validate if Mic options are visible in list
    Validate Mic options